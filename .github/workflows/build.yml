name: Build and Release

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

  build-windows:
    needs: create-release
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
    - name: Build executable
      run: python scripts/build.py
    - name: Create ZIP archive
      run: Compress-Archive -Path dist\PixelatedShowdown.exe -DestinationPath PixelatedShowdown-Windows.zip
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ./PixelatedShowdown-Windows.zip
        asset_name: PixelatedShowdown-Windows.zip
        asset_content_type: application/zip

  build-linux:
    needs: create-release
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
    - name: Build executable
      run: python3 scripts/build.py
    - name: Create tarball
      run: tar -czvf PixelatedShowdown-Linux.tar.gz -C dist PixelatedShowdown
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ./PixelatedShowdown-Linux.tar.gz
        asset_name: PixelatedShowdown-Linux.tar.gz
        asset_content_type: application/gzip
